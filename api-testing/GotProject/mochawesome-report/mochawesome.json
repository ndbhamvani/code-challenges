{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-25T18:33:25.842Z",
    "end": "2021-05-25T18:33:54.831Z",
    "duration": 28989,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "aa714249-4971-45da-9b31-2c2abc00c651",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
          "title": "Testing Covid-19 data API to evaluate whether reasonable data is returned",
          "fullFile": "/Users/nitinbhamvani/Documents/TestAutomation/APITesting/GotProject/test/GET_Covid19data.js",
          "file": "/test/GET_Covid19data.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Testing Covid-19 data API to evaluate whether reasonable data is returned\"",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned \"before each\" hook in \"Testing Covid-19 data API to evaluate whether reasonable data is returned\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "eadb6a68-bdbb-4871-bdab-87255c930149",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display less than than 200,000 Covid-19 deaths for UK",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display less than than 200,000 Covid-19 deaths for UK",
              "timedOut": false,
              "duration": 397,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.lessThan(200000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "256f0ce9-f520-4ec6-8511-c947533e8ce6",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display more than than 75,000 Covid-19 deaths for UK",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display more than than 75,000 Covid-19 deaths for UK",
              "timedOut": false,
              "duration": 3661,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.greaterThan(75000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "f8b0f53b-578f-4ef4-959f-108b7e6585cf",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display less than than 200,000 Covid-19 deaths for Spain",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display less than than 200,000 Covid-19 deaths for Spain",
              "timedOut": false,
              "duration": 3511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.lessThan(200000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "bb6f9513-79c9-475f-beea-d5e9ac23de96",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display more than than 75,000 Covid-19 deaths for Spain",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display more than than 75,000 Covid-19 deaths for Spain",
              "timedOut": false,
              "duration": 1413,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.greaterThan(75000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "4e802acc-70a1-4fb1-bce1-841eab583681",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display less than than 200,000 Covid-19 deaths for Italy",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display less than than 200,000 Covid-19 deaths for Italy",
              "timedOut": true,
              "duration": 10006,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.lessThan(200000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {
                "message": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/nitinbhamvani/Documents/TestAutomation/APITesting/GotProject/test/GET_Covid19data.js)",
                "estack": "Error: Timeout of 10000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/Users/nitinbhamvani/Documents/TestAutomation/APITesting/GotProject/test/GET_Covid19data.js)\n    at listOnTimeout (internal/timers.js:554:17)\n    at processTimers (internal/timers.js:497:7)",
                "diff": null
              },
              "uuid": "1fe5fe06-25c9-4645-87a8-9202ad1f3e56",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display more than than 75,000 Covid-19 deaths for Italy",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display more than than 75,000 Covid-19 deaths for Italy",
              "timedOut": false,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.greaterThan(75000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "0b7d9120-c088-49a2-96f0-a43268ad71b4",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display less than than 200,000 Covid-19 deaths for Germany",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display less than than 200,000 Covid-19 deaths for Germany",
              "timedOut": false,
              "duration": 3522,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.lessThan(200000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "51ac2156-8d8f-475a-bb90-f46c02194e78",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display more than than 75,000 Covid-19 deaths for Germany",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display more than than 75,000 Covid-19 deaths for Germany",
              "timedOut": false,
              "duration": 1378,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.greaterThan(75000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "df02a307-222b-4d3b-8774-8e5257f90e22",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display less than than 200,000 Covid-19 deaths for France",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display less than than 200,000 Covid-19 deaths for France",
              "timedOut": false,
              "duration": 3452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.lessThan(200000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "49b44b70-d4e2-49b0-a412-2cdf4216db32",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display more than than 75,000 Covid-19 deaths for France",
              "fullTitle": "Testing Covid-19 data API to evaluate whether reasonable data is returned should display more than than 75,000 Covid-19 deaths for France",
              "timedOut": false,
              "duration": 1390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "got.get(`https://covid-19-data.p.rapidapi.com/country/?name=${country}`,\n{headers: core.headers()}, \n{responseType: 'json'})\n.then(res => {\n  core.respDateCode(res);\n  console.log(core.prettyJSON(res));  \n  expect(core.getRespBody(res)[0].deaths).to.be.greaterThan(75000);\n  done()\n})\n.catch(err => {\n  console.log('Error: ', err.message);\n});",
              "err": {},
              "uuid": "a381469b-e119-44b1-85aa-faea287ec5aa",
              "parentUUID": "c0018185-7a44-4abe-bc09-8cf1507ca22b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "256f0ce9-f520-4ec6-8511-c947533e8ce6",
            "f8b0f53b-578f-4ef4-959f-108b7e6585cf",
            "bb6f9513-79c9-475f-beea-d5e9ac23de96",
            "4e802acc-70a1-4fb1-bce1-841eab583681",
            "0b7d9120-c088-49a2-96f0-a43268ad71b4",
            "51ac2156-8d8f-475a-bb90-f46c02194e78",
            "df02a307-222b-4d3b-8774-8e5257f90e22",
            "49b44b70-d4e2-49b0-a412-2cdf4216db32",
            "a381469b-e119-44b1-85aa-faea287ec5aa"
          ],
          "failures": [
            "1fe5fe06-25c9-4645-87a8-9202ad1f3e56"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28959,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}